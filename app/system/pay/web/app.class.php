<?php# MetInfo Enterprise Content Management System# Copyright (C) MetInfo Co.,Ltd (http://www.metinfo.cn). All rights reserved.defined('IN_MET') or exit('No permission');load::mod_class('pay/web/pay');class app extends pay {    public function __construct() {        global $_M;        parent::__construct();    }    /**     * 创建支付请求表单     * @param $payparams     * @param string $reqUrl     * @return string     */    public static function createPayForm($payparams) {        global $_M;        $reqUrl = "{$_M['url']['site']}pay/dopay.php?lang={$_M['lang']}";        // <body onload="javascript:document.pay_form.submit();">        $html = <<<eot<html><head>    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /></head><body onload="javascript:document.pay_form.submit();">    <form id="pay_form" name="pay_form" action="{$reqUrl}" method="post">eot;        foreach ( $payparams as $key => $value ) {            $value = base64_encode($value);            $html .= "    <input type=\"hidden\" name=\"{$key}\" id=\"{$key}\" value=\"{$value}\" />\n";            #$html .= "    <input type=\"input\" name=\"{$key}\" id=\"{$key}\" value=\"{$value}\" />\n";        }        $html .= <<<eot    <!--<input type="submit" type="hidden">-->    </form></body></html>eot;        return $html;    }    /**     * 应用统一支付接口,跳转至支付页面     */    public function doPay(){        global $_M;        $user = $this->check();        $order = array(            'body'          =>  base64_decode($_M['form']['body']),                              //商品描述(必须)            'subject'       =>  base64_decode($_M['form']['subject']),                           //商品名称(必须)            'out_trade_no'  =>  base64_decode($_M['form']['out_trade_no']),                      //订单编号(必须)            'total_fee'     =>  base64_decode($_M['form']['total_fee']),                         //订单金额(必须)            'no'            =>  base64_decode($_M['form']['no']),                                //调用接口的应用编号(必须)            'attach'        =>  base64_decode($_M['form']['attach']),                            //附加数据            'goods_tag'     =>  base64_decode($_M['form']['goods_tag']),                         //商品标记            'product_id'    =>  base64_decode($_M['form']['product_id']),                        //产品编号            'callback_url'  =>  base64_decode($_M['form']['callback_url']),                      //app回调地址(必须)            'sys_callback'  =>  base64_decode($_M['form']['sys_callback'])                       //系统回调        );        if(!$order['out_trade_no'] || !$order['total_fee'] || !$order['subject'] || !$order['no'] || !$order['body'] || !$order['callback_url']) {            $this->error($_M['word']['pay_required_para_missing'],"00001");            die();        }        if($this->CheckOrderPayStatus($order['out_trade_no'])){            $this->error("Order has been paid or closed","00002");            header("Location: {$order['callback_url']}");            die();        }        $strcode = load::mod_class('pay/web/include/class/interface_pay', 'new')->data_encode($order);        $pay_list = load::mod_class('pay/web/include/class/interface_pay', 'new')->get_pay_list();        foreach($pay_list as $key=>$val){            $pay_list[$key]['url'] = "{$val['url']}&strcode={$strcode}";            if($val['check_url']){                $pay_list[$key]['check_url'] = $val['check_url'].$order['out_trade_no'];            }        }        //账户余额支付 paytype = balance        $balance = load::mod_class('pay/web/finance', 'new')->getBalance($_M['user']);        if($balance['balance'] >= $order['total_fee']){            $balance['user_have_balance'] = 1;            $balance['url'] = "{$_M['url']['site']}pay/app.php?lang={$_M['lang']}&paytype=balance&strcode={$strcode}";        }else{            $balance['user_have_balance'] = 0;        }        $order['total_fee_str']  = $this->price_str($order['total_fee']);        $balance['balance_str']  = $this->price_str($balance['balance']);        $payment_open = load::mod_class('pay/pay_op', 'new')->getPayConfig('payment_open'); //在线支付开关        $pay_list       = $payment_open ? $pay_list : '';        $this->input['payment_open']   = $payment_open;        $this->input['pay_list']       = $payment_open ? $pay_list : '';        $this->input['order']          = $order;        $this->input['balance']        = $balance;        $this->load_url_unique();        require $this->view('app/index',$this->input); /*      echo <<<EOT <html> <head> <h1>paytest</h1>     <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> </head> <body >EOT;         foreach ($pay_list as $key => $bal) {             echo "<a href = '{$pay_list[$key]["url"] }'>{$key}</a><br>";         }         echo <<<EOT </body>EOT;*/    }    /**     * @param Int         paytype        支付类型，1|微信扫码支付，2|支付宝WAP支付，3|支付宝支付，4|银联支付，5|PayPal支付，6|微信公众号，7|微信H5支付，9|银联B2B     * @param String(128) body           商品描述（商品或支付单简要描述）     * @param String(256) subject        商品名称（商品的标题/交易标题/订单标题/订单关键字等，该参数最长为128个汉字）     * @param String(32)  out_trade_no   商户订单号（商户支付的订单号由商户自定义生成，长度不大于32位、可包含字母）     * @param String(127) attach         附加数据（在查询API和支付通知中原样返回，该字段主要用于商户携带订单的自定义数据）     * @param String(32)  goods_tag      商品标记（商品标记，代金券或立减优惠功能的参数）     * @param String(32)  product_id     商品ID（trade_type=NATIVE，此参数必传。此id为二维码中包含的商品ID，商户自行定义）     * @param Int         total_fee      总金额（订单总金额，原始单位为分，只能为整数。可后台处理为“元”为单位）     * @param Int(11)     no             调用接口的应用编号（存在于applist）     *     * 返回参数说明：     * ①微信扫码支付     返回微信访问地址（weixin://*****）【JSON格式'code_url'】，需要通过qrcode.php转码     * ②支付宝WAP支付    无数据返回，直接跳转支付宝网关     * ③支付宝支付       无数据返回，直接跳转支付宝网关     * ④银联支付         无数据返回，直接跳转银联支付网关     * ⑤PayPal         空返回（开发中）     * ⑥微信客户端支付   以JSON形式返回微信客户端（H5支付）支付页面JS需要的两个参数（'Parameters','Address'），具体使用参考templates/met/jsapi.php文件     * 发起支付请求     */    public function dointerface() {        global $_M;        $user = $this->check();        //获取订单参数		$date = load::mod_class('pay/web/include/class/interface_pay', 'new')->data_decode($_M['form']['strcode']);		if(!$date){			echo json_encode(array('error'=>'time_out'));die;		}		$date['pay_type'] = $_M['form']['paytype'] ? $_M['form']['paytype']: (empty($_GET["code"]) ? '' : '6');        $date['balance'] = '0';        //账户充值        if ($date['no']=='10080') {            $date['balance'] = '1';        }		//账户余额消费        if($_M['form']['paytype'] == 'balance'){            $date['pay_type'] = '0';            $date['balance'] = '2';        }        if($this->GetPayOpen() && $date['out_trade_no']) {		    //订单处理           if($result = $this->OrderProcessing($date)) {                echo $result;           }else{                echo json_encode(array('error'=>'Order creation failed'));die;           }        } else {            echo json_encode(array('error'=>'invalid'));die;        }    }    public function doCheckStatus(){        global $_M;        if ($this->CheckOrderPayStatus($_M['form']['out_no'])) {            return 1;        } else {            return 0;        }    }    /**     * 订单处理 pay_order     * @DateTime 2017-03-16     * @param   array $date['out_trade_no'] 订单号     * @param  根据订单号查询，如果没有此订单-创建-启动支付 | 如果有-订单未支付-启动支付     * @param  调用的是pay.class.php的CreateOrder方法     */    public function OrderProcessing($date){        $Order = $this->GetOeder($date['out_trade_no']);        if(!$Order) {            if($this->CreateOrder($date)) {                return $this->PaymentProcessing($date);            } else {                return FALSE;            }        } else {            if(!$Order['status']) {                return $this->PaymentProcessing($date);            } else {                //重复提交订单                return FALSE;            }        }    }    /**     * 支付处理     */    public function PaymentProcessing($date) {        global $_M;        $this->UpadteOrderPaymentType($date['pay_type'], $date['balance'], $date['out_trade_no']);//更新订单支付类型        switch ($date['pay_type']) {            case 0://账户余额支付                return $this->Payment_balance($date);                break;            case 1://微信扫码支付                return $this->Payment_wxpay($date);                break;            case 2://支付宝wap                return $this->Payment_alipaywap($date);                break;            case 3://支付宝支付                if($this->checkalipay()){                    //支付宝新接口要求PHP版本5.5以上                    $this->Payment_alipaypagepay($date);                    break;                }else{                    $this->Payment_alipay($date);                    break;                }            case 4://网银支付b2c                return $this->Payment_unionpay($date);                break;             case 5://PayPal支付                $this->Payment_paypal($date);                break;            case 6://微信JsApiPay支付(微信公众号支付)                return $this->Payment_wxpay_JsApi($date);                break;            case 7://微信H5支付                return $this->Payment_wxpay_h5($date);                break;            case 9://银联b2b                return $this->Payment_unionpayb2b($date);                break;            default:                break;        }    }    //账户余额支付    public function Payment_balance($date){        global $_M;        /*$balance = load::mod_class('pay/web/finance.class.php', 'new');        $balance->balancepay($date);*/        $finance = load::mod_class('pay/web/finance.class.php', 'new');        if(!$finance->balancepay()){            $this->ajax_error($_M['word']['memberpassno']);            return false;        }        $this->UpadteOrder($date['pay_type'],$date['out_trade_no']);        $this->docallback($date['callback_url'],'ajax');        return ;    }    //微信扫码    public function Payment_wxpay($date) {		global $_M;        $wxpay             = load::mod_class('pay/web/wxpay.class.php', 'new');        $array['code_url'] = "{$_M['url']['site']}app/system/pay/web/wxpay/qrcode.php?data=".$wxpay->wxpay($date);//调用微信支付接口        return json_encode($array);//返回二维码链接 json 形式返回    }    //微信 WEB H5    public function Payment_wxpay_h5($date) {		global $_M;        $wxpay             = load::mod_class('pay/web/wxpay.class.php', 'new');        $array['code_url'] = "{$_M['url']['site']}app/system/pay/web/wxpay/qrcode.php?data=".$wxpay->webH5($date);//调用微信H5支付接口        return json_encode($array);//返回二维码链接 json 形式返回    }    //微信公众号 JsApi    public function Payment_wxpay_JsApi($date) {        global $_M;        $wxpay = load::mod_class('pay/web/wxpay.class.php', 'new');//加载微信支付处理类        $date['openId'] = $_M['form']['openId'];        $result         = $wxpay->JsApiPay($date);   //调用微信JsApiPay支付接口        return json_encode($result);                 //返回json数据 'Parameters','Address'        /*        if($_GET["code"]){            //session_start();                                                    //获取session中存储的订单信息            //$date           = $_SESSION["temp"];            $date['openId'] = $wxpay->GetOpen_ID();            $result         = $wxpay->JsApiPay($date);                          //调用微信H5支付接口            return json_encode($result);                                        //返回json数据 'Parameters','Address'        }else{            //session_start();                                                    //session 存储订单信息，备用            //$_SESSION["temp"] = $date;            $wxpay->GetOpen_ID();        }        */    }    //支付宝    public function Payment_alipay($date) {        $alipay = load::mod_class('pay/web/alipay.class.php', 'new');//调用支付宝支付接口        $alipay->alipay($date);    }    //支付宝网页支付    public function Payment_alipaypagepay($date) {        $unionpay = load::mod_class('pay/web/alipaynew.class.php', 'new');//调用支付宝WAP支付        return $unionpay->alipayPagepay($date);    }    //支付宝WAP支付    public function Payment_alipaywap($date) {        $unionpay = load::mod_class('pay/web/alipaynew.class.php', 'new');//调用支付宝WAP支付        return $unionpay->alipayWap($date);    }    //Paypal     public function Payment_paypal($date) {        $paypal = load::mod_class('pay/web/paypal.class.php', 'new');//加载paypal支付接口        $paypal->paypal($date);    }    //银联b2c    public function Payment_unionpay($date) {        $unionpay = load::mod_class('pay/web/unionpay.class.php', 'new');//调用银联支付接口        return $unionpay->unionpay($date);    }    //银联b2b    public function Payment_unionpayb2b($date) {        $unionpay = load::mod_class('pay/web/unionpayb2b.class.php', 'new');//调用银联支付接口        return $unionpay->unionpay($date);    }    //获取支付接口列表    public function get_pay_list(){        $pay_list = load::mod_class('pay/web/include/class/interface_pay', 'new')->get_pay_list();        return $pay_list;    }}# This program is an open source system, commercial use, please consciously to purchase commercial license.# Copyright (C) MetInfo Co., Ltd. (http://www.metinfo.cn). All rights reserved.?>